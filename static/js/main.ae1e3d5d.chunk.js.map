{"version":3,"sources":["components/styled.ts","components/Icon.tsx","components/Navigation.tsx","components/CodeEditorComponent.tsx","common/helpers.ts","common/defaultConfig.ts","components/FetchSchema.tsx","components/Tabs.tsx","components/Tab.tsx","Playground.tsx","specs/streetlights.ts","common/icons.ts","index.tsx"],"names":["PlaygroundWrapper","styled","div","NavigationWrapper","nav","NavigationHeader","header","NavigationHeaderH1","h1","NavigationHeaderIcon","img","NavigationHeaderAsyncApiText","span","NavigationHeaderEditorText","NavigationLinks","ul","NavigationLinksItem","li","NavigationLink","a","ContentWrapper","CodeEditorsWrapper","AsyncApiWrapper","TabsWrapper","CodeEditorWrapper","TabsHeader","TabsAdditionalHeaderContent","RefreshIcon","props","show","TabsContent","TabWrapper","TabLink","active","InputWrapper","InputField","input","Button","button","Icon","iconName","url","iconPrefix","iconProp","href","target","rel","icon","NavigationComponent","src","alt","key","map","CodeEditorComponent","state","code","onChangeValue","editor","data","value","parentCallback","nextProps","externalResource","this","setState","mode","options","lineNumbers","lineWrapping","theme","tabSize","indentWithTabs","onChange","Component","fetchSchema","link","requestOptions","method","fetch","then","handleResponse","response","text","debounce","func","wait","onStart","onCancel","timeout","args","clearTimeout","setTimeout","undefined","defaultConfig","FetchSchema","fetchSchemaFromExternalResources","URL","placeholder","e","type","onClick","Tabs","handleTabClick","tabIndex","activeTabIndex","renderHeader","children","React","Children","child","index","c","cloneElement","title","isActive","renderActiveTab","defaultActiveTabIndex","additionalHeaderContent","concat","filter","Tab","event","preventDefault","Playground","updateSchemaFn","updateConfigFn","schema","config","schemaFromExternalResource","refreshing","updateSchema","updateSchemaFromExternalResource","updateConfig","startRefreshing","stopRefreshing","renderAdditionalHeaderContent","parsedConfig","str","JSON","parse","Navigation","autoAddCss","library","add","faGithub","faSlack","faGlobe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae1e3d5d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const PlaygroundWrapper = styled.div``;\n\nexport const NavigationWrapper = styled.nav`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  line-height: 48px;\n  padding: 0;\n  background-color: #263238;\n  border-bottom: #607d8b 2px solid;\n`;\n\nexport const NavigationHeader = styled.header`\n  margin-left: 16px;\n  display: inline-block;\n`;\n\nexport const NavigationHeaderH1 = styled.h1`\n  color: #fff;\n  margin: 0;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 48px;\n`;\n\nexport const NavigationHeaderIcon = styled.img`\n  height: 34px;\n  max-height: 34px;\n  margin-top: 7px;\n  float: left;\n`;\n\nexport const NavigationHeaderAsyncApiText = styled.span`\n  font-weight: bold;\n  margin-left: 12px;\n`;\n\nexport const NavigationHeaderEditorText = styled.span`\n  font-style: italic;\n  margin-left: 6px;\n`;\n\nexport const NavigationLinks = styled.ul`\n  display: flex;\n  flex-grow: 1;\n  justify-content: flex-end;\n  margin: 0 16px 0 0;\n  padding: 0;\n  position: relative;\n  list-style-type: none;\n`;\n\nexport const NavigationLinksItem = styled.li`\n  display: inline-block;\n  margin-left: 12px;\n\n  > a {\n    font-family: 'SAP-Icons';\n    font-weight: 700;\n    color: #f77669;\n    transition: 0.2s color linear;\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover {\n      color: #c3e88d;\n    }\n  }\n`;\n\nexport const NavigationLink = styled.a``;\n\nexport const ContentWrapper = styled.div`\n  width: 100%;\n  height: calc(100vh - 50px);\n  min-height: calc(100vh - 50px);\n  display: flex;\n  justify-content: space-between;\n  background: #f3f4f5;\n`;\n\nexport const CodeEditorsWrapper = styled.div`\n  width: 40%;\n  background: rgb(38, 50, 56);\n`;\n\nexport const AsyncApiWrapper = styled.div`\n  width: 60%;\n  height: calc(100vh - 50px);\n  min-height: calc(100vh - 50px);\n  overflow: auto;\n\n  > .asyncapi {\n    padding: 24px;\n  }\n  > .asyncapi__error {\n    margin: 24px;\n  }\n`;\n\nexport const TabsWrapper = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  font-family: '72';\n  font-weight: normal;\n`;\n\nexport const CodeEditorWrapper = styled.div`\n  > .react-codemirror2 > .CodeMirror {\n    height: 100%;\n    min-height: 100%;\n  }\n`;\n\nexport const TabsHeader = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0 5px 15px;\n  display: flex;\n  justify-items: flex-start;\n  flex-flow: row nowrap;\n`;\n\nexport const TabsAdditionalHeaderContent = styled.li`\n  margin: 0 0 0 auto;\n  position: relative;\n  display: inline-block;\n  padding: 19px 15px;\n`;\n\ninterface RefreshIconProps {\n  show?: boolean;\n}\n\nexport const RefreshIcon = styled.div<RefreshIconProps>`\n  font-family: 'SAP-Icons';\n  font-weight: 700;\n  color: #f77669;\n  transition: 0.2s all linear;\n  opacity: ${props => (props.show ? '1' : '0')};\n  animation-name: spin;\n  animation-duration: 1.5s;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport const TabsContent = styled.div`\n  margin: 0;\n  padding: 0 20px;\n  font-size: 14px;\n  color: #515559;\n  line-height: 1.57;\n  overflow: auto;\n  height: calc(100vh - 117px);\n  min-height: calc(100vh - 117px);\n`;\n\nexport const TabWrapper = styled.li``;\n\ninterface TabLinkProps {\n  active?: boolean;\n}\n\nexport const TabLink = styled.div<TabLinkProps>`\n  display: flex;\n  align-items: center;\n  margin: 0 15px;\n  padding: 19px 0 15px;\n  border: none;\n  position: relative;\n  color: ${props => (props.active ? '#c3e88d' : '#f77669')};\n  font-size: 14px;\n  outline: none;\n  transition: 0.2s color linear;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &:after {\n    content: '';\n    bottom: 0;\n    display: block;\n    position: absolute;\n    height: ${props => (props.active ? '3px' : '0px')};\n    width: 100%;\n    border-radius: 2px;\n    background-color: #c3e88d;\n  }\n\n  &:hover {\n    color: #c3e88d;\n\n    &:after {\n      content: '';\n      bottom: 0;\n      display: block;\n      position: absolute;\n      height: 3px;\n      width: 100%;\n      border-radius: 2px;\n      background-color: #c3e88d;\n    }\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  box-sizing: border-box;\n  position: relative;\n  margin-bottom: 20px;\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 6px 12px;\n  box-sizing: border-box;\n  outline: none;\n  background: inherit;\n  border: 3px solid #f77669;\n  color: #f77669;\n  border-radius: 6px;\n  transition: 0.2s border, color linear;\n  font-size: 14px;\n\n  &:hover {\n    color: #c3e88d;\n    border-color: #c3e88d;\n  }\n`;\n\nexport const Button = styled.button`\n  width: auto;\n  padding: 6px 12px;\n  display: inline-block;\n  background: inherit;\n  border: 3px solid #f77669;\n  color: #f77669;\n  border-radius: 6px;\n  font-size: 14px;\n  margin-left: 12px;\n  white-space: nowrap;\n  transition: 0.2s border, color linear;\n  cursor: pointer;\n\n  &:hover {\n    color: #c3e88d;\n    border-color: #c3e88d;\n  }\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  IconPrefix,\n  IconName,\n  IconProp,\n} from '@fortawesome/fontawesome-svg-core';\n\nimport IconProps from '../common/icons';\n\nimport { NavigationLinksItem, NavigationLink } from './styled';\n\nconst Icon: React.StatelessComponent<IconProps> = ({\n  iconName,\n  url,\n  iconPrefix = 'fab',\n}) => {\n  const iconProp: IconProp = [iconPrefix as IconPrefix, iconName as IconName];\n\n  return (\n    <NavigationLinksItem>\n      <NavigationLink href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <FontAwesomeIcon icon={iconProp} />\n      </NavigationLink>\n    </NavigationLinksItem>\n  );\n};\n\nexport default Icon;\n","import React from 'react';\nimport IconComponent from './Icon';\n\nimport Icon from '../common/icons';\n\nimport {\n  NavigationWrapper,\n  NavigationHeader,\n  NavigationHeaderH1,\n  NavigationHeaderIcon,\n  NavigationHeaderAsyncApiText,\n  NavigationHeaderEditorText,\n  NavigationLinks,\n} from './styled';\n\ninterface IconData extends Icon {\n  key: string;\n}\n\nconst NavigationComponent: React.StatelessComponent = () => {\n  const iconsData: IconData[] = [\n    {\n      key: 'github',\n      url: 'https://github.com/asyncapi/asyncapi-react',\n      iconName: 'github',\n    },\n    {\n      key: 'slack',\n      url:\n        'https://join.slack.com/t/asyncapi/shared_invite/enQtNDY3MzI0NjU5OTQyLWU4ZGU2MTg1MDIyZDFjMTI2YjkxYTdlMzc1NjgzYTAxZDM1YTg1NDhhMTE2NDliMjlhZjYxNzk0ZTE5ZGU1ZTg',\n      iconName: 'slack',\n    },\n    {\n      key: 'asyncapi',\n      url: 'https://www.asyncapi.com/',\n      iconName: 'globe',\n      iconPrefix: 'fa',\n    },\n  ];\n\n  return (\n    <NavigationWrapper>\n      <NavigationHeader>\n        <NavigationHeaderH1>\n          <NavigationHeaderIcon\n            src=\"https://avatars0.githubusercontent.com/u/16401334?v=4&s=200\"\n            alt=\"AsyncAPI logo\"\n          />\n          <NavigationHeaderAsyncApiText>\n            AsyncAPI React\n          </NavigationHeaderAsyncApiText>\n          <NavigationHeaderEditorText>editor</NavigationHeaderEditorText>\n        </NavigationHeaderH1>\n      </NavigationHeader>\n      <NavigationLinks>\n        {iconsData.map(icon => (\n          <IconComponent {...icon} key={icon.key} />\n        ))}\n      </NavigationLinks>\n    </NavigationWrapper>\n  );\n};\n\nexport default NavigationComponent;\n","import React, { Component } from 'react';\nimport * as codemirror from 'codemirror';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\n\nimport { CodeEditorWrapper } from './styled';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\nimport 'codemirror/mode/yaml/yaml';\nimport 'codemirror/mode/javascript/javascript';\n\ninterface Props {\n  code: string;\n  externalResource?: string;\n  mode?: string;\n  parentCallback(value: string): void;\n}\n\ninterface State {\n  code: string;\n}\n\nclass CodeEditorComponent extends Component<Props, State> {\n  state = {\n    code: this.props.code,\n  };\n\n  componentDidUpdate(nextProps: Props) {\n    const { externalResource } = this.props;\n    if (nextProps.externalResource !== externalResource) {\n      this.setState({ code: externalResource! });\n    }\n  }\n\n  render() {\n    const {\n      props: { mode = 'application/json' },\n      state: { code },\n    } = this;\n\n    return (\n      <CodeEditorWrapper>\n        <CodeMirror\n          value={code}\n          options={{\n            mode,\n            lineNumbers: true,\n            lineWrapping: true,\n            theme: 'material',\n            tabSize: 2,\n            indentWithTabs: false,\n          }}\n          onChange={this.onChangeValue}\n        />\n      </CodeEditorWrapper>\n    );\n  }\n\n  private onChangeValue = (\n    editor: codemirror.Editor,\n    data: codemirror.EditorChange,\n    value: string,\n  ): void => {\n    this.props.parentCallback(value);\n  };\n}\n\nexport default CodeEditorComponent;\n","export const parse = <T extends {}>(str?: string): T => {\n  if (!str) {\n    return {} as T;\n  }\n\n  try {\n    return JSON.parse(str) as T;\n  } catch (e) {\n    return {} as T;\n  }\n};\n\nexport const stringify = <T extends {}>(content?: T): string => {\n  if (!content) {\n    return '';\n  }\n\n  try {\n    return JSON.stringify(content);\n  } catch (e) {\n    return '';\n  }\n};\n\nexport const fetchSchema = async (link: string): Promise<any> => {\n  const requestOptions = {\n    method: 'GET',\n  };\n\n  return fetch(link, requestOptions).then(handleResponse);\n};\n\nfunction handleResponse(response: any) {\n  return response.text().then((data: string) => data);\n}\n\nexport function debounce<T>(\n  func: (...args: any[]) => void,\n  wait: number,\n  onStart: () => void,\n  onCancel: () => void,\n): () => any {\n  let timeout: number | undefined;\n  return (...args: any[]) => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    onStart();\n    timeout = setTimeout(() => {\n      timeout = undefined;\n      func(...args);\n      onCancel();\n    }, wait || 1000);\n  };\n}\n","export const defaultConfig: string = `{\n  \"show\": {\n    \"info\": true,\n    \"servers\": true,\n    \"security\": false,\n    \"messages\": true,\n    \"schemas\": true,\n    \"channels\": true\n  },\n  \"showErrors\": true,\n  \"disableDefaultTheme\": false\n}`;\n","import React, { Component } from 'react';\n\nimport { InputWrapper, InputField, Button } from './styled';\n\nimport { fetchSchema } from '../common';\n\ninterface Props {\n  parentCallback(value: string): void;\n}\n\ninterface State {\n  link: string;\n}\n\nclass FetchSchema extends Component<Props, State> {\n  state = {\n    link: '',\n  };\n\n  render() {\n    const { link } = this.state;\n\n    return (\n      <InputWrapper>\n        <InputField\n          value={link}\n          placeholder=\"Link for external schema\"\n          onChange={(e: any) => this.setState({ link: e.target.value })}\n        />\n        <Button type=\"button\" onClick={this.fetchSchemaFromExternalResources}>\n          Fetch schema\n        </Button>\n      </InputWrapper>\n    );\n  }\n\n  private fetchSchemaFromExternalResources = async () => {\n    try {\n      // tslint:disable-next-line\n      new URL(this.state.link);\n    } catch (e) {\n      return;\n    }\n    const {\n      props: { parentCallback },\n      state: { link },\n    } = this;\n    parentCallback(await fetchSchema(link));\n  };\n}\n\nexport default FetchSchema;\n","import React, { Component } from 'react';\n\nimport {\n  TabsWrapper,\n  TabsHeader,\n  TabsAdditionalHeaderContent,\n  TabsContent,\n} from './styled';\n\nimport { TabProps } from './Tab';\n\ninterface Props {\n  additionalHeaderContent?: React.ReactNode;\n  defaultActiveTabIndex?: number;\n}\n\ninterface State {\n  activeTabIndex: number;\n}\n\nclass Tabs extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeTabIndex: this.props.defaultActiveTabIndex\n        ? this.props.defaultActiveTabIndex\n        : 0,\n    };\n  }\n\n  handleTabClick = (tabIndex: number) => {\n    this.setState({\n      activeTabIndex: tabIndex,\n    });\n  };\n\n  renderHeader = (children: Array<React.ReactElement<TabProps>>) =>\n    React.Children.map(children, (child, index) => {\n      const c = child as React.ReactElement<TabProps>;\n      return React.cloneElement(c, {\n        title: c.props.title,\n        parentCallback: this.handleTabClick,\n        tabIndex: index,\n        isActive: index === this.state.activeTabIndex,\n      });\n    });\n\n  renderActiveTab = (children: Array<React.ReactElement<TabProps>>) => {\n    if (children[this.state.activeTabIndex]) {\n      return children[this.state.activeTabIndex].props.children;\n    }\n    return null;\n  };\n\n  render() {\n    const { additionalHeaderContent } = this.props;\n    const children = []\n      .concat(...(this.props.children as any))\n      .filter(child => child !== null && child !== undefined);\n\n    return (\n      <TabsWrapper>\n        <TabsHeader>\n          {this.renderHeader(children)}\n          <TabsAdditionalHeaderContent>\n            {additionalHeaderContent}\n          </TabsAdditionalHeaderContent>\n        </TabsHeader>\n        <TabsContent>{this.renderActiveTab(children)}</TabsContent>\n      </TabsWrapper>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\n\nimport { TabLink, TabWrapper } from './styled';\n\nexport interface TabProps {\n  children: React.ReactNode;\n  title: string;\n  tabIndex?: number;\n  isActive?: boolean;\n  parentCallback?: (value: number) => void;\n}\n\nclass Tab extends Component<TabProps> {\n  render() {\n    const { title, tabIndex, isActive, parentCallback } = this.props;\n\n    return (\n      <TabWrapper key={tabIndex}>\n        <TabLink\n          onClick={(event: any) => {\n            event.preventDefault();\n            parentCallback!(tabIndex!);\n          }}\n          active={isActive}\n        >\n          {title}\n        </TabLink>\n      </TabWrapper>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport AsyncApi, { ConfigInterface } from '@asyncapi/react-component';\n\nimport {\n  Navigation,\n  CodeEditorComponent,\n  FetchSchema,\n  RefreshIcon,\n  Tabs,\n  Tab,\n  PlaygroundWrapper,\n  ContentWrapper,\n  CodeEditorsWrapper,\n  AsyncApiWrapper,\n} from './components';\n\nimport { defaultConfig, parse, debounce } from './common';\nimport * as specs from './specs';\n\nconst defaultSchema = specs.streetlights;\n\ninterface State {\n  schema: string;\n  config: string;\n  schemaFromExternalResource: string;\n  refreshing: boolean;\n}\n\nclass Playground extends Component<{}, State> {\n  updateSchemaFn: (value: string) => void;\n  updateConfigFn: (value: string) => void;\n\n  state = {\n    schema: defaultSchema,\n    config: defaultConfig,\n    schemaFromExternalResource: '',\n    refreshing: false,\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.updateSchemaFn = debounce(\n      this.updateSchema,\n      750,\n      this.startRefreshing,\n      this.stopRefreshing,\n    );\n    this.updateConfigFn = debounce(\n      this.updateConfig,\n      750,\n      this.startRefreshing,\n      this.stopRefreshing,\n    );\n  }\n\n  render() {\n    const { schema, config, schemaFromExternalResource } = this.state;\n    const parsedConfig = parse<ConfigInterface>(config || defaultConfig);\n\n    return (\n      <PlaygroundWrapper>\n        <Navigation />\n        <ContentWrapper>\n          <CodeEditorsWrapper>\n            <Tabs\n              additionalHeaderContent={this.renderAdditionalHeaderContent()}\n            >\n              <Tab title=\"Schema\" key=\"Schema\">\n                <>\n                  <FetchSchema\n                    parentCallback={this.updateSchemaFromExternalResource}\n                  />\n                  <CodeEditorComponent\n                    key=\"Schema\"\n                    code={schema}\n                    externalResource={schemaFromExternalResource}\n                    parentCallback={this.updateSchemaFn}\n                    mode=\"text/yaml\"\n                  />\n                </>\n              </Tab>\n              <Tab title=\"Configuration\" key=\"Configuration\">\n                <CodeEditorComponent\n                  key=\"Configuration\"\n                  code={config}\n                  parentCallback={this.updateConfigFn}\n                />\n              </Tab>\n            </Tabs>\n          </CodeEditorsWrapper>\n          <AsyncApiWrapper>\n            <AsyncApi schema={schema} config={parsedConfig} />\n          </AsyncApiWrapper>\n        </ContentWrapper>\n      </PlaygroundWrapper>\n    );\n  }\n\n  private updateSchema = (schema: string) => {\n    this.setState({ schema });\n  };\n\n  private updateSchemaFromExternalResource = (schema: string) => {\n    this.setState({ schemaFromExternalResource: schema });\n  };\n\n  private updateConfig = (config: string) => {\n    this.setState({ config });\n  };\n\n  private startRefreshing = (): void => {\n    setTimeout(() => {\n      this.setState({ refreshing: true });\n    }, 500);\n  };\n\n  private stopRefreshing = (): void => {\n    this.setState({ refreshing: false });\n  };\n\n  private renderAdditionalHeaderContent = () => (\n    <RefreshIcon show={this.state.refreshing}>{'\\uE00A'}</RefreshIcon>\n  );\n}\n\nexport default Playground;\n","export const streetlights = `\nasyncapi: '2.0.0'\nid: 'urn:com:smartylighting:streetlights:server'\ninfo:\n  title: Streetlights API\n  version: '1.0.0'\n  description: |\n    The Smartylighting Streetlights API allows you to remotely manage the city lights.\n\n    ### Check out its awesome features:\n\n    * Turn a specific streetlight on/off 🌃\n    * Dim a specific streetlight 😎\n    * Receive real-time information about environmental lighting conditions 📈\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n\nservers:\n  production:\n    url: api.streetlights.smartylighting.com:{port}\n    protocol: mqtt\n    description: Test broker\n    variables:\n      port:\n        description: Secure connection (TLS) is available through port 8883.\n        default: '1883'\n        enum:\n          - '1883'\n          - '8883'\n    security:\n      - apiKey: []\n      - supportedOauthFlows:\n        - streetlights:on\n        - streetlights:off\n        - streetlights:dim\n      - openIdConnectWellKnown: []\n\ndefaultContentType: application/json\n\nchannels:\n  smartylighting/streetlights/1/0/event/{streetlightId}/lighting/measured:\n    description: The topic on which measured values may be produced and consumed.\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    subscribe:\n      summary: Receive information about environmental lighting conditions of a particular streetlight.\n      operationId: receiveLightMeasurement\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/lightMeasured'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/turn/on:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: turnOn\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/turnOnOff'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/turn/off:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: turnOff\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/turnOnOff'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/dim:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: dimLight\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/dimLight'\n\ncomponents:\n  messages:\n    lightMeasured:\n      name: lightMeasured\n      title: Light measured\n      summary: Inform about environmental lighting conditions for a particular streetlight.\n      contentType: application/json\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/lightMeasuredPayload\"\n      examples:\n        - headers:\n            my-app-header: 12\n          payload:\n            lumens: 1\n            sentAt: 2020-01-31T13:24:53Z\n        - headers:\n            my-app-header: 13\n        - payload:\n            lumens: 3\n            sentAt: 2020-10-31T13:24:53Z\n    turnOnOff:\n      name: turnOnOff\n      title: Turn on/off\n      summary: Command a particular streetlight to turn the lights on or off.\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/turnOnOffPayload\"\n    dimLight:\n      name: dimLight\n      title: Dim light\n      summary: Command a particular streetlight to dim the lights.\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/dimLightPayload\"\n\n  schemas:\n    lightMeasuredPayload:\n      type: object\n      properties:\n        lumens:\n          type: integer\n          minimum: 0\n          description: Light intensity measured in lumens.\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n      required:\n        - lumens\n    turnOnOffPayload:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - on\n            - off\n          description: Whether to turn on or off the light.\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n    dimLightPayload:\n      type: object\n      properties:\n        percentage:\n          type: integer\n          description: Percentage to which the light should be dimmed to.\n          minimum: 0\n          maximum: 100\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n    sentAt:\n      type: string\n      format: date-time\n      description: Date and time when the message was sent.\n\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      in: user\n      description: Provide your API key as the user and leave the password empty.\n    supportedOauthFlows:\n      type: oauth2\n      description: Flows to support OAuth 2.0\n      flows:\n        implicit:\n          authorizationUrl: 'https://authserver.example/auth'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        password:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        clientCredentials:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        authorizationCode:\n          authorizationUrl: 'https://authserver.example/auth'\n          tokenUrl: 'https://authserver.example/token'\n          refreshUrl: 'https://authserver.example/refresh'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n    openIdConnectWellKnown:\n      type: openIdConnect\n      openIdConnectUrl: 'https://authserver.example/.well-known'\n\n  parameters:\n    streetlightId:\n      description: The ID of the streetlight.\n      schema:\n        type: string\n\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n        required:\n          - my-app-header\n  \n  operationTraits:\n    kafka:\n      bindings:\n        kafka:\n          clientId: my-app-id\n`;\n","import { library, config } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub, faSlack } from '@fortawesome/free-brands-svg-icons';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\n\nconfig.autoAddCss = false;\n\nlibrary.add(faGithub, faSlack, faGlobe);\n\nexport default interface Icon {\n  iconName: string;\n  url: string;\n  iconPrefix?: string;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Playground from './Playground';\n\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport '@asyncapi/react-component/lib/styles/fiori.css';\nimport './common/icons';\n\nReactDOM.render(<Playground />, document.getElementById('root'));\n"],"sourceRoot":""}